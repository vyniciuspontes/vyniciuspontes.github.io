openapi: 3.0.0
# Added by API Auto Mocking Plugin
info:
  description: This API describes the endpoints published by Horus Ame Pro ERP
  version: "1.0.0"
  title: Horus Ame Pro ERP

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/vyniciuspontes/horus-ame-pro-erp/1.0.0


tags:
  - name: Products

paths:
  /products/{channelType}:
    post:
      parameters:
        - in: path
          required: false
          name: channelType
          description: Channel Type where the product will be created. If empty, the product will be created on both channel types
          schema:
            type: string
            enum:
              - online
              - offline
      security:
        - basicAuth: []
      summary: Create a product
      description: Create a product on all or specified channel type (online, offline)
      operationId: createProduct
      tags: [Products]
      responses:
        201:
          description: Successfully created product
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'

        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        502:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

      requestBody:
        $ref: '#/components/requestBodies/Products'

    put:
      parameters:
        - in: path
          required: false
          name: channelType
          description: Channel Type where the product will be edited. If empty, the product will be edited on both channel types
          schema:
            type: string
            enum:
              - online
              - offline
      security:
        - basicAuth: []
      summary: Edit a product
      description: Edit a product on all or specified channel type (online, offline)
      operationId: editProduct
      tags: [Products]
      responses:
        204:
          description: Successfully edited product on all channel types
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        502:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

      requestBody:
        $ref: '#/components/requestBodies/Products'
  # /products/{channelType}/{sellerName}/{storeId}/{sku}:
  #   delete:
  #     parameters:
  #       - in: path
  #         required: true
  #         name: channelType
  #         schema:
  #           type: string
  #           enum:
  #           - online
  #           - offline
  #       - in: path
  #         required: true
  #         name: sellerName
  #         schema:
  #           type: string
  #       - in: path
  #         required: false
  #         name: storeId
  #         description: Identifies the store of the operation. Necessary for offline operations.
  #         schema:
  #           type: string
  #       - in: path
  #         required: true
  #         name: sku
  #         description: Sku of the product to be deleted.
  #         schema:
  #           type: string
  #     security:
  #       - basicAuth: []
  #     summary: Delete product
  #     description: Delete product from online channel type
  #     operationId: deleteOnlineProduct
  #     tags: [Products]
  #     responses:
  #       204:
  #         description: Successfully deleted product from offline channel
  #       502:
  #         description: The proxy server received an invalid response from pdv channel
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ChannelsError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:

    InvalidBodyError:
      type: object
      description: Indicates that the server has received an invalid body format
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          example: /orders
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Field 'example-field' has an invalid format

    GatwayTimeoutError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          example: /orders
        status:
          type: integer
          example: 504
        error:
          type: string
          example: Gatway Timeout
        message:
          type: string
          example: The server was acting as a gateway or proxy and did not receive a timely response from the upstream server

    DefaultError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: string

    ChannelsError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              channel:
                type: string
                description: Indicates the channel type where the error has been occurred
                enum:
                  - online
                  - offline
              status:
                type: string
                description: channel response status
                example: "400"
              error:
                type: object
                description: error object returned from channel

    ResponseProducts:
      type: object
      properties:
        products:
          type: array
          items:
              $ref: '#/components/schemas/Product'
        total:
          type: integer

    Product:
      type: object
      required:
        - description
        - name
        - sku
        - price_start
        - commercial_unit
        - tax
        - store_id
      properties:
        store_id:
          type: string
          description: Product Store Id
        commercial_unit:
          type: string
          enum:
            - PC
            - KG
            - UNID
            - M
        price_start:
          type: string
          description: date-time of price vigency
          format: date-time
        tax:
          type: object
          properties:
            cfop:
              type: string
              description: Product CFOP (Código Fiscal De Operações e Prestações)
              required: true
            icms_origin_code:
              type: string
              description: ICMS production origin code
              enum:
                - "0"
                - "3"
                - "4"
                - "5"
                - "8"
                - "1"
                - "2"
                - "3"
                - "7"
          required:
            - cfop
            - icms_origin_code
        sku:
          type: string
          description: Product SKU code
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        brand:
          type: string
          description: Product brand
        ean:
          type: string
          description: Product EAN barcode
        nbm:
          type: string
          description: Product NBM - Brazilian nomenclature of goods
        status:
          type: string
          description: Product status
          enum:
            - enabled
            - disabled
        categories:
          type: array
          description: Product categories
          items:
            $ref: '#/components/schemas/Category'
        images:
          type: array
          description: List of image URLs
          items:
            type: string
            format: url
        specifications:
          type: array
          description: Product specifications
          items:
            $ref: '#/components/schemas/Specification'
        qty:
          type: integer
          description: Product stock quantity
        price:
          type: number
          description: Product price
        promotional_price:
          type: number
          description: Product promotional price
        cost:
          type: number
          description: Product cost
        weight:
          type: number
          description: Product weight (kg)
        height:
          type: number
          description: Product height (cm)
        width:
          type: number
          description: Product width (cm)
        length:
          type: number
          description: Product length (cm)
        variations:
          type: array
          description: Product variations
          items:
            $ref: '#/components/schemas/Variation'
        variation_attributes:
          type: array
          description: List of attribute codes used to specify the product variations
          items:
            type: string
      example:
        store_id: '123'
        commercial_unit: UNID
        price_start: 2018-11-12T25:30:08+0000
        tax:
          cfop: '5102'
          icms_origin_code: '4'
        sku: '789115010'
        name: Produto incrível do Yan123
        description: Melhor produto que pode existir
        brand: string
        ean: '7506339391312'
        nbm: '49019900'
        status: enabled
        categories:
        - code: code
          name: name
        images:
        - string
        specifications:
        - value: value
          key: key
        qty: 1
        price: 9.99
        promotional_price: 0
        cost: 0
        weight: 0
        height: 0
        width: 0
        length: 0
        variations:
        - images:
          - http://example.com/aeiou
          - http://example.com/aeiou
          ean: ean
          qty: qty
          sku: sku
          specifications:
          - value: value
            key: key
          - value: value
            key: key
        variation_attributes:
        - string

    Category:
      type: object
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Category code
        name:
          type: string
          description: Category name
      example:
        code: code
        name: name

    Variation:
      type: object
      required:
        - sku
      properties:
        sku:
          type: string
          description: Variation SKU code
        qty:
          type: string
          description: Variation stock quantity
        ean:
          type: string
          description: Variation EAN barcode
        images:
          type: array
          description: List of image URLs
          items:
            type: string
            format: uri
        specifications:
          type: array
          description: Variation additional specifications
          items:
            $ref: '#/components/schemas/Specification'
      example:
        images:
          - 'http://example.com/aeiou'
          - 'http://example.com/aeiou'
        ean: ean
        qty: qty
        sku: sku
        specifications:
          - value: value
            key: key
          - value: value
            key: key

    Specification:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Specification key
        value:
          type: string
          description: Specification value
      example:
        value: value
        key: key

    OrderCollection:
      type: object
      properties:
        platform:
          type: string
          description: Integration platform name
        sellerName:
          type: string
          description: Nome do Seller
        order_package:
          type: array
          items:
            $ref: '#/components/schemas/OrderPackage'

    OrderPackage:
      type: object
      properties:
        external_id:
          type: string
          description: Order external Id
        order:
           $ref: '#/components/schemas/Order'

    Order:
      type: object
      properties:
        operator:
          type: string
          description: PDV order operator
        session_id:
          type: string
          description: Operator session id
        store_id:
          type: string
          description: PDV Store id
        pos_id:
          type: string
          description: PDV id
        code:
          type: string
          description: Order identification code
        channel:
          type: string
          description: Sale channel where the order has been placed
        placed_at:
          type: string
          format: date-time
          description: Date and time when the order has been placed
        updated_at:
          type: string
          format: date-time
          description: Date and time when the order has been updated
        shipping_carrier:
          type: string
          description: Order shipping carrier
        shipping_method:
          type: string
          description: Order shipping method
        shipping_cost:
          type: number
          description: Total order shipping cost
        calculation_type:
          type: string
          description: Freight estimation method on order purchase
        estimated_delivery:
          type: string
          format: date-time
          description: Order estimated delivery
        estimated_delivery_shift:
          type: string
          description: Day shift for scheduled delivery (eg. null for non scheduled orders)
          enum:
            - MORNING
            - AFTERNOON
            - NIGHT
        items:
          type: array
          description: Ordered items
          items:
            $ref: '#/components/schemas/Item'
        customer:
          $ref: '#/components/schemas/Customer'
        shipping_address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/Status'
        sync_status:
          type: string
          description: >-
            Order synchronization status (eg. relates to seller platform
            integration status)
          enum:
            - SYNCED
            - NOT_SYNCED
            - ERROR
        total_ordered:
          type: number
          description: Total ordered value
        interest:
          type: number
          description: Order interest value
        payment:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        refund:
          $ref: '#/components/schemas/Refund'
        invoices:
          type: array
          description: Order invoice list
          items:
            $ref: '#/components/schemas/Invoice'
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/Shipment'

    Refund:
      description: Refund details when PDV sends CANCELED status
      type: object
      properties:
        cancelation_reason:
          type: string
          description: Cancelation Reason
          default: 1
        sefaz_protocol_number:
          type: string
          description: Nfce cancelation protocol number
        sefaz_authorization_date:
          type: string
          description: Nfce cancelation authorization date
        contingency:
          type: boolean
          description: Indicates if Nfce was canceled in contingency

    Address:
      type: object
      properties:
        full_name:
          type: string
          description: Address full name
        street:
          type: string
          description: Address street name
        number:
          type: string
          description: Address number
        detail:
          type: string
          description: Address details
          deprecated: true
        complement:
          type: string
          description: Address complement (additional info)
        reference:
          type: string
          description: Address reference
        neighborhood:
          type: string
          description: Address neighborhood
        city:
          type: string
          description: Address city
        region:
          type: string
          description: Address region
        country:
          type: string
          description: Address country (ISO 3166 code)
        postcode:
          type: string
          description: Address post code
        phone:
          type: string
          description: Address main phone number
        secondary_phone:
          type: string
          description: Address secondary phone number

    Customer:
      type: object
      properties:
        name:
          type: string
          description: Customer name
        email:
          type: string
          description: Customer email address
        date_of_birth:
          type: string
          description: Customer date of birth
        gender:
          type: string
          description: Customer gender
        vat_number:
          type: string
          description: Customer VAT identification number
        phones:
          type: array
          description: Customer phone list
          items:
            type: string
        state_registration:
          type: string
          description: Customer state registration (in case of a company customer)

    Item:
      type: object
      properties:
        id:
          type: string
          description: Item identification code (eg. product or product variation SKU code)
        product_id:
          type: string
          description: Item product identification code (eg. product SKU code)
        name:
          type: string
          description: Item name
        qty:
          type: integer
          description: Item purchased quantity
        original_price:
          type: number
          description: Item original price
        special_price:
          type: number
          description: Item purchased price
        shipping_cost:
          type: number
          description: Item shipping cost

    Invoice:
      type: object
      properties:
        key:
          type: string
          description: Brazilian electronic invoice key (NFe key)
          pattern: '^\d{44}$'
        number:
          type: string
          description: Invoice number
          pattern: '^\d{9}$'
        line:
          type: string
          description: Invoice line (serie number)
          pattern: '^\d{3}$'
        issue_date:
          type: string
          format: date-time
          description: Invoice issue date
        contingency:
          type: string
          description: Indicates if Nfce was emitted in contingency (ONLY PDV)

    Shipment:
      type: object
      properties:
        code:
          type: string
          description: Shipment identification code
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentItem'
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentTrack'

    ShipmentItem:
      type: object
      required:
        - qty
        - sku
      properties:
        sku:
          type: string
          description: Shipment item SKU code
        qty:
          type: integer
          description: Shipment item quantity

    ShipmentTrack:
      type: object
      required:
        - carrier
        - code
        - method
      properties:
        code:
          type: string
          description: Shipment track code
        carrier:
          type: string
          description: Shipping carrier
        method:
          type: string
          description: Shipping method
        url:
          type: string
          description: Tracking URL

    Payment:
      type: object
      properties:
        method:
          type: string
          description: Payment method
        description:
          type: string
          description: Payment description
        value:
          type: number
          description: Payment value
        parcels:
          type: integer
          description: Number of installments
        cashback_amount_value:
          type: string
          description: Cashback Value (Only AME_DIGITAL method)
        ame_operation_id:
          type: string
          description: Cashback Value (Only AME_DIGITAL method)
        nsu:
          type: string
          description: Transaction nsu
        transaction_id:
          type: string
          description: Id da transação
        change:
          type: string
          description: change if payment is in cash (Only MONEY method)
        transaction_date:
          type: string
          format: date-time
          description: Payment transaction date
        status:
          type: string
          description: Payment status
        card_issuer:
          type: string
          description: Card issuer
        autorization_id:
          type: string
          description: Authorization ID
        sefaz:
          $ref: '#/components/schemas/Sefaz'

    Sefaz:
      type: object
      properties:
        id_payment:
          type: string
        name_payment:
          type: string
        id_card_issuer:
          type: string
        name_card_issuer:
          type: string
        type_integration:
          type: string
        payment_indicator:
          type: string

    Status:
      type: object
      required:
        - code
        - label
        - type
      properties:
        code:
          type: string
          description: Order status code
        label:
          type: string
          description: Order status label
        type:
          type: string
          description: Order status type (see StatusType)


  requestBodies:
    Products:
      content:
        application/json:
          schema:
            type: object
            required:
              - seller_name
              - product
            properties:
              seller_name:
                type: string
                example: HYDRA_AMESTORETESTCOMPANY
              product:
                $ref: '#/components/schemas/Product'
      description: Product
      required: true

    Orders:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderCollection'
      description: Order Package Collection
      required: true
