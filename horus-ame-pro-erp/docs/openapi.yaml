openapi: 3.0.0
# Added by API Auto Mocking Plugin
info:
  description: This API describes the endpoints published by Horus Ame Pro ERP
  version: "1.0.0"
  title: Horus Ame Pro ERP

servers:
  - description: Homolog Server
    url: https://horus-ame-pro-erp-v1-homolog.b2w.io


tags:
  - name: Product
  - name: POS

paths:
  /products/{channelType}:
    post:
      parameters:
        - in: path
          required: false
          name: channelType
          description: Channel Type where the product will be created. If empty, the product will be created on both channel types
          schema:
            type: string
            enum:
              - online
              - offline
      security:
        - basicAuth: []
      summary: Create a product
      description: Create a product on all or specified channel type (online, offline)
      operationId: createProduct
      tags: [Product]
      responses:
        201:
          description: Successfully created product
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'

        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        500:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

      requestBody:
        $ref: '#/components/requestBodies/CreateProduct'

    put:
      parameters:
        - in: path
          required: false
          name: channelType
          description: Channel Type where the product will be edited. If empty, the product will be edited on both channel types
          schema:
            type: string
            enum:
              - online
              - offline
      security:
        - basicAuth: []
      summary: Edit a product
      description: Edit a product on all or specified channel type (online, offline)
      operationId: editProduct
      tags: [Product]
      responses:
        204:
          description: Successfully edited product on all channel types
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        500:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

      requestBody:
        $ref: '#/components/requestBodies/EditProduct'
  # /CreateProduct/{channelType}/{sellerName}/{storeId}/{sku}:
  #   delete:
  #     parameters:
  #       - in: path
  #         required: true
  #         name: channelType
  #         schema:
  #           type: string
  #           enum:
  #           - online
  #           - offline
  #       - in: path
  #         required: true
  #         name: sellerName
  #         schema:
  #           type: string
  #       - in: path
  #         required: false
  #         name: storeId
  #         description: Identifies the store of the operation. Necessary for offline operations.
  #         schema:
  #           type: string
  #       - in: path
  #         required: true
  #         name: sku
  #         description: Sku of the product to be deleted.
  #         schema:
  #           type: string
  #     security:
  #       - basicAuth: []
  #     summary: Delete product
  #     description: Delete product from online channel type
  #     operationId: deleteOnlineProduct
  #     tags: [CreateProduct]
  #     responses:
  #       204:
  #         description: Successfully deleted product from offline channel
  #       502:
  #         description: The proxy server received an invalid response from pdv channel
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ChannelsError'

  /sellers/{sellerName}/stores/{storeId}/pos:
    post:
      parameters:
        - in: path
          required: false
          name: sellerName
          description: Seller name
          example: "HYDRA_AMESTORETESTCOMPANY"
          schema:
            type: string
        - in: path
          required: false
          name: storeId
          description: Store Id
          example: "1"
          schema:
            type: string
      security:
        - basicAuth: []
      summary: Create a POS
      description: Create a POS
      operationId: createPOS
      tags:
        - POS
      responses:
        201:
          description: Successfully created POS
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'
        500:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

      requestBody:
        $ref: '#/components/requestBodies/CreatePOS'
    get:
      parameters:
        - in: path
          required: false
          name: sellerName
          description: Seller name
          example: "HYDRA_AMESTORETESTCOMPANY"
          schema:
            type: string
        - in: path
          required: false
          name: storeId
          description: Store Id
          example: "1"
          schema:
            type: string
      security:
        - basicAuth: []
      summary: List POS
      description: List POS
      operationId: listPOS
      tags:
        - POS
      responses:
        200:
          description: List of POS
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/POSBasicInfo'

        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        500:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

  /sellers/{sellerName}/stores/{storeId}/pos/{posId}:
    get:
      parameters:
        - in: path
          required: false
          name: sellerName
          description: Seller name
          example: "HYDRA_AMESTORETESTCOMPANY"
          schema:
            type: string
        - in: path
          required: false
          name: storeId
          description: Store Id
          example: "1"
          schema:
            type: integer
        - in: path
          required: false
          name: posId
          description: POS Id
          example: "1"
          schema:
            type: integer
      security:
        - basicAuth: []
      summary: Get POS
      description: Get POS
      operationId: getPOS
      tags:
        - POS
      responses:
        200:
          description: POS details
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/POSDetailed'
        400:
         description: Indicates that the Integration Server has encountered a format error on some property of the body
         headers:
           Chain-Id:
             schema:
               type: string
               description: transaction chain-id
             example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/InvalidBodyError'
        500:
         description: The proxy server received an invalid response from channels
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/ChannelsError'

    delete:
      parameters:
        - in: path
          required: false
          name: sellerName
          description: Seller name
          example: "HYDRA_AMESTORETESTCOMPANY"
          schema:
            type: string
        - in: path
          required: false
          name: storeId
          description: Store Id
          example: "1"
          schema:
            type: integer
        - in: path
          required: false
          name: posId
          description: POS Id
          example: "1"
          schema:
            type: integer
      security:
        - basicAuth: []
      summary: Delete POS
      description: Delete POS
      operationId: deletePOS
      tags:
        - POS
      responses:
        204:
          description: Successfully deleted
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'

  /sellers/{sellerName}/stores/{storeId}/pos/{posId}/qrCode:
    get:
      parameters:
        - in: path
          required: false
          name: sellerName
          description: Seller name
          example: "HYDRA_AMESTORETESTCOMPANY"
          schema:
            type: string
        - in: path
          required: false
          name: storeId
          description: Store Id
          example: "1"
          schema:
            type: string
      security:
        - basicAuth: []
      summary: Regenerate POS QRCode
      description: Regenerate POS QRCode
      operationId: regeneratePOS
      tags:
        - POS
      responses:
        200:
          description: List of POS
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                type: object
                properties:
                  qrCode:
                    type:


                  $ref: '#/components/schemas/POSBasicInfo'

        400:
          description: Indicates that the Integration Server has encountered a format error on some property of the body
          headers:
            Chain-Id:
              schema:
                type: string
                description: transaction chain-id
              example: '5cf57a39e8288600070ef0b6-16-51-MONDAY-3-2019'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBodyError'

        500:
          description: The proxy server received an invalid response from channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    InvalidBodyError:
      type: object
      description: Indicates that the server has received an invalid body format
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          example: /orders
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Field 'example-field' has an invalid format

    GatwayTimeoutError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          example: /orders
        status:
          type: integer
          example: 504
        error:
          type: string
          example: Gatway Timeout
        message:
          type: string
          example: The server was acting as a gateway or proxy and did not receive a timely response from the upstream server

    DefaultError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: string

    POS:
      type: object
      properties:
        fiscal:
          type: object
          properties:
            id:
              type: string
              description: Fiscal organization id
            serie:
              type: string
            last_number:
              type: string
        name:
            type: string
            example: "Meu Device"

    POSDetailed:
      type: object
      properties:
        fiscal:
          type: object
          properties:
            serie:
              type: string
            last_number:
              type: string
        id:
            type: string
            example: "122"
        name:
            type: string
            example: "Meu Device"
        paired:
          type: boolean
          example: true
        device_model:
          type: string
          example: Samsung Galaxy
        last_access:
          type: string
          format: date-time
        last_update:
          type: string
          format: date-time
        app_version:
          type: string
          example: 1.0.0
        qrCode:
          type: string
          example: V09RUERQT1FXUE9LRFdRUE9LZG9rd2tkcXc=

    POSBasicInfo:
      type: object
      properties:
        fiscal:
          type: object
          properties:
            serie:
              type: string
        id:
            type: string
            example: "122"
        name:
            type: string
            example: "Meu Device"
        paired:
          type: boolean
          example: true

    ChannelsError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              channel:
                type: string
                description: Indicates the channel type where the error has been occurred
                enum:
                  - online
                  - offline
              status:
                type: string
                description: channel response status
                example: "400"
              error:
                type: object
                description: error object returned from channel

    ResponseCreateProduct:
      type: object
      properties:
        CreateProduct:
          type: array
          items:
              $ref: '#/components/schemas/Product'
        total:
          type: integer

    Product:
      type: object
      required:
        - description
        - name
        - sku
        - price_start
        - commercial_unit
        - tax
        - store_id
        - market_structure
      properties:
        store_id:
          type: string
          example: '123'
          description: Product Store Id. (Required Only On Offline Channel).
        commercial_unit:
          type: string
          example: UNID
          description: Commercial Unit of the product. (Required Only On Offline Channel).
          enum:
            - PC
            - KG
            - UNID
            - M
        price_start:
          type: string
          description: date-time of price vigency. (Required Only On Offline Channel).
          format: date-time
          example: 2018-11-12T25:30:08Z
        tax:
          type: object
          description: (Required Only On Offline Channel).
          properties:
            cfop:
              type: string
              example: '5102'
              description: Product CFOP (Código Fiscal De Operações e Prestações)
              required: true
            icms_origin_code:
              type: string
              description:
                NATIONAL_1 (0),
                NATIONAL_2 (3),
                NATIONAL_3 (4),
                NATIONAL_4 (5),
                NATIONAL_5 (8),
                FOREIGN_1 (1),
                FOREIGN_2 (2),
                FOREIGN_3 (6),
                FOREIGN_4 (7)
              enum:
                - NATIONAL_1
                - NATIONAL_2
                - NATIONAL_3
                - NATIONAL_4
                - NATIONAL_5
                - FOREIGN_1
                - FOREIGN_2
                - FOREIGN_3
                - FOREIGN_4

          required:
            - cfop
            - icms_origin_code
        sku:
          type: string
          description: Product SKU code
          example: '789115010'
        name:
          type: string
          example: 'Produto incrível do Yan123'
          description: Product name
        description:
          type: string
          description: Product description
          example: 'Melhor produto que pode existir'
        brand:
          type: string
          description: Product brand
        ean:
          type: string
          description: Product EAN barcode
          example: '7506339391312'
        nbm:
          type: string
          description: Product NBM - Brazilian nomenclature of goods
          example: '49019900'
        status:
          type: string
          description: Product status
          enum:
            - enabled
            - disabled
        categories:
          type: array
          description: Product categories
          items:
            $ref: '#/components/schemas/Category'
        images:
          type: array
          description: List of image URLs
          items:
            type: string
            format: url
        specifications:
          type: array
          description: Product specifications
          items:
            $ref: '#/components/schemas/Specification'
        qty:
          type: integer
          description: Product stock quantity
        price:
          type: number
          description: Product price
        promotional_price:
          type: number
          description: Product promotional price
        cost:
          type: number
          description: Product cost
        weight:
          type: number
          description: Product weight (kg)
        height:
          type: number
          description: Product height (cm)
        width:
          type: number
          description: Product width (cm)
        length:
          type: number
          description: Product length (cm)
        variations:
          type: array
          description: Product variations
          items:
            $ref: '#/components/schemas/Variation'
        variation_attributes:
          type: array
          description: List of attribute codes used to specify the product variations
          items:
            type: string
        market_structure:
          $ref: '#/components/schemas/MarketStructureCreate'

    EditableProduct:
      type: object
      required:
        - sku
        - store_id
      properties:
        store_id:
          type: string
          description: Product Store Id. (Required Only On Offline Channel).
        commercial_unit:
          type: string
          description: Commercial Unit of the product..
          enum:
            - PC
            - KG
            - UNID
            - M
        price_start:
          type: string
          description: date-time of price vigency.
          format: date-time
        tax:
          type: object
          properties:
            cfop:
              type: string
              description: Product CFOP (Código Fiscal De Operações e Prestações)
              required: true
            icms_origin_code:
              type: string
              description:
                NATIONAL_1 (0),
                NATIONAL_2 (3),
                NATIONAL_3 (4),
                NATIONAL_4 (5),
                NATIONAL_5 (8),
                FOREIGN_1 (1),
                FOREIGN_2 (2),
                FOREIGN_3 (6),
                FOREIGN_4 (7)
              enum:
                - NATIONAL_1
                - NATIONAL_2
                - NATIONAL_3
                - NATIONAL_4
                - NATIONAL_5
                - FOREIGN_1
                - FOREIGN_2
                - FOREIGN_3
                - FOREIGN_4

          required:
            - cfop
            - icms_origin_code
        sku:
          type: string
          description: Product SKU code
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        brand:
          type: string
          description: Product brand
        ean:
          type: string
          description: Product EAN barcode
        nbm:
          type: string
          description: Product NBM - Brazilian nomenclature of goods
        status:
          type: string
          description: Product status
          enum:
            - enabled
            - disabled
        categories:
          type: array
          description: Product categories
          items:
            $ref: '#/components/schemas/Category'
        images:
          type: array
          description: List of image URLs
          items:
            type: string
            format: url
        specifications:
          type: array
          description: Product specifications
          items:
            $ref: '#/components/schemas/Specification'
        qty:
          type: integer
          description: Product stock quantity
        price:
          type: number
          description: Product price
        promotional_price:
          type: number
          description: Product promotional price
        cost:
          type: number
          description: Product cost
        weight:
          type: number
          description: Product weight (kg)
        height:
          type: number
          description: Product height (cm)
        width:
          type: number
          description: Product width (cm)
        length:
          type: number
          description: Product length (cm)
        variations:
          type: array
          description: Product variations
          items:
            $ref: '#/components/schemas/Variation'
        variation_attributes:
          type: array
          description: List of attribute codes used to specify the product variations
          items:
            type: string
        market_structure:
          $ref: '#/components/schemas/MarketStructureEdit'

    MarketStructureCreate:
        type: object
        description: Market structure of the product. (Required only on Online channel)
        required:
          - family_code
          - sector_code
          - family_name
          - sector_name
          - department_code
          - sub_family_code
          - department_name
          - sub_family_name
        properties:
          family_name:
            type: string
          family_code:
            type: integer
          sector_name:
            type: string
          sector_code:
            type: integer
          department_name:
            type: string
          department_code:
            type: integer
          sub_family_code:
            type: integer
          sub_family_name:
            type: string
        example:
          family_name: MATINAIS
          family_code: 4
          sector_name: MERCEARIA DOCE
          sector_code: 4227
          department_name: ALIMENTOS
          department_code: 9095
          sub_family_code: 2
          sub_family_name: BARRA DE CEREAIS


    MarketStructureEdit:
        type: object
        description: Market structure of the product. (Required only on Online channel)
        properties:
          family_name:
            type: string
          family_code:
            type: integer
          sector_name:
            type: string
          sector_code:
            type: integer
          department_name:
            type: string
          department_code:
            type: integer
          sub_family_code:
            type: integer
          sub_family_name:
            type: string

    Category:
      type: object
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Category code
        name:
          type: string
          description: Category name
      example:
        code: code
        name: name

    Variation:
      type: object
      required:
        - sku
      properties:
        sku:
          type: string
          description: Variation SKU code
        qty:
          type: string
          description: Variation stock quantity
        ean:
          type: string
          description: Variation EAN barcode
        images:
          type: array
          description: List of image URLs
          items:
            type: string
            format: uri
        specifications:
          type: array
          description: Variation additional specifications
          items:
            $ref: '#/components/schemas/Specification'
      example:
        images:
          - 'http://example.com/aeiou'
          - 'http://example.com/aeiou'
        ean: ean
        qty: qty
        sku: sku
        specifications:
          - value: value
            key: key
          - value: value
            key: key

    Specification:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Specification key
        value:
          type: string
          description: Specification value
      example:
        value: value
        key: key

  requestBodies:
    CreateProduct:
      content:
        application/json:
          schema:
            type: object
            required:
              - seller_name
              - product
            properties:
              seller_name:
                type: string
                example: HYDRA_AMESTORETESTCOMPANY
              product:
                $ref: '#/components/schemas/Product'

      description: Product
      required: true

    EditProduct:
      content:
        application/json:
          schema:
            type: object
            required:
              - seller_name
              - product
            properties:
              seller_name:
                type: string
              product:
                $ref: '#/components/schemas/EditableProduct'
            example:
              seller_name: HYDRA_AMESTORETESTCOMPANY
              product:
                store_id: '123'
                sku: '789115020'
                price: 9.99

      description: Product
      required: true

    CreatePOS:
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/POS'

      description: POS
      required: true
